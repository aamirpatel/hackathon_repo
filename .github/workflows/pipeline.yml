name: Python Application CI/CD
on:
  push:
    branches:
      - main
  workflow_dispatch: null
  pull_request:
    branches:
      - main
jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE: 992382544923.dkr.ecr.us-east-1.amazonaws.com/aamirpatel #aamirpatel/cicdpy
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Build Docker image
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 992382544923.dkr.ecr.us-east-1.amazonaws.com
          docker build -t $DOCKER_IMAGE:${{ github.sha }} .
          docker tag $DOCKER_IMAGE:${{ github.sha }} $DOCKER_IMAGE:latest
          #docker build -t aamirpatel .
          #docker tag aamirpatel:latest 992382544923.dkr.ecr.us-east-1.amazonaws.com/aamirpatel:latest
          
      - name: Push Docker image
        run: |
          docker push $DOCKER_IMAGE:${{ github.sha }}
          docker push $DOCKER_IMAGE:latest
      - name: Official SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v3.0.0
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=hackathon-proj -Dsonar.host.url=${{ env.SONAR_HOST_URL
            }} -Dsonar.login=${{ env.SONAR_TOKEN }}
            -Dsonar.working.directory=./.scannerwork
      - name: Print SonarQube Logs
        run: >
          ls -al .scannerwork
          cat .scannerwork/report-task.txt || echo "report-task.txt not found"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Install kubectl
        uses: azure/setup-kubectl@v2.0
        with:
           version: 'v1.24.0' # default is latest stable
        id: install
      - name: Update kube config
        run: aws eks update-kubeconfig --region us-east-1 --name my-cluster1
      - name: Deploy to EKS
        run: |
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml

      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.4.0
        with:
          target: 'http://20.84.92.125'
          #rules_file_name: '.zap/rules.tsv'
          docker_name: 'zaproxy/zap-stable'
          cmd_options: '-a -m 5 -r zap_report.html'
